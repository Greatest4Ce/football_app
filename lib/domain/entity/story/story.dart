import 'package:flutter/foundation.dart';
import 'package:football_app/domain/entity/content_tag/content_tag.dart';
import 'package:football_app/domain/entity/reading/reading.dart';
import 'package:freezed_annotation/freezed_annotation.dart';

part 'story.freezed.dart';
part 'story.g.dart';

@freezed
class Story with _$Story {
  const factory Story({
    @JsonKey(name: 'id') required String? id,
    @JsonKey(name: 'type') required String? type,
    @JsonKey(name: 'internalID') required String? internalID,
    @JsonKey(name: 'title') required String? title,
    @JsonKey(name: 'summary') required String? summary,
    @JsonKey(name: 'autoGeneratedSummary')
    required String? autoGeneratedSummary,
    @JsonKey(name: 'abstract') required List<String>? abstract,
    @JsonKey(name: 'published') required int? published,
    @JsonKey(name: 'updatedAt') required int? updatedAt,
    @JsonKey(name: 'wordCount') required int? wordCount,
    @JsonKey(name: 'premium') required bool? premium,
    @JsonKey(name: 'secondaryBrands') required List<String>? secondaryBrands,
    @JsonKey(name: 'byLine') required String? byLine,
    @JsonKey(name: 'shortURl') required String? shortURL,
    @JsonKey(name: 'longURL') required String? longURL,
    @JsonKey(name: 'primaryCategory') required String? primaryCategory,
    @JsonKey(name: 'primarySite') required String? primarySite,
    @JsonKey(name: 'eyebrowSite') required String? eyebrowSite,
    @JsonKey(name: 'readings') required List<Reading>? readings,
    @JsonKey(name: 'image') required String? imageURL,
    @JsonKey(name: 'thumbnailImage') required String? thumbnailImageURL,
    @JsonKey(name: 'card') required String? card,
    @JsonKey(name: 'contenttags') required List<ContentTag>? contentTags,
  }) = _Story;

  factory Story.fromJson(Map<String, Object?> json) => _$StoryFromJson(json);
}
